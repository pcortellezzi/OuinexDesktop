<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:OuinexDesktop.ViewModels"
		     x:DataType="vm:MarketWatchViewModel"
			 xmlns:converters="using:OuinexDesktop.Converters"
			 xmlns:material="using:Material.Icons.Avalonia"
			 xmlns:models="using:OuinexDesktop.Models"
			 xmlns:local="using:OuinexDesktop.Views.Controls"
			 mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="OuinexDesktop.Views.Controls.MarketWatchWidgets">
	<UserControl.Resources>
		<converters:TickToBrushConverter x:Key="tickConverter"/>
		<converters:PercentRangeUpConverter x:Key="upArrowConverter"/>
		<converters:PercentRangeDownConverter x:Key="downArrowConverter"/>
		<converters:TickToForegroundConverter x:Key="tickForegournConverter"/>
		<converters:DecimalToStringConverter x:Key="DecimalToStringConverter"/>
	</UserControl.Resources>
	<UserControl.Styles>
		<Styles>
			<Styles.Resources>
				<Control x:Key="down">
					<Path Fill="#EC5656"
					      Stretch="Uniform"
					      Data="M16,18L18.29,15.71L13.41,10.83L9.41,14.83L2,7.41L3.41,6L9.41,12L13.41,8L19.71,14.29L22,12V18H16Z"/>
				</Control>
				<Control x:Key="up">
					<Path Fill="#34a560"
						  Stretch="Uniform"
						  Data="M16,6L18.29,8.29L13.41,13.17L9.41,9.17L2,16.59L3.41,18L9.41,12L13.41,16L19.71,9.71L22,12V6H16Z"/>
				</Control>
			</Styles.Resources>
			<Style Selector="Border.Up">
				<Style.Animations>
					<Animation Duration="0:0:1"
							   Easing="QuadraticEaseInOut"
							   IterationCount="Infinite">
						<KeyFrame Cue="50%">
							<Setter Property="ScaleTransform.ScaleX" Value="0.8"/>
							<Setter Property="ScaleTransform.ScaleY" Value="0.8"/>
						</KeyFrame>
					</Animation>
				</Style.Animations>
				<Setter Property="Child" Value="{StaticResource up}"/>
			</Style>
			
			<Style Selector="Border.Down">
				<Style.Animations>
					<Animation Duration="0:0:1"
							   Easing="QuadraticEaseInOut"
							   IterationCount="Infinite">
						<KeyFrame Cue="50%">
							<Setter Property="ScaleTransform.ScaleX" Value="0.8"/>
							<Setter Property="ScaleTransform.ScaleY" Value="0.8"/>
						</KeyFrame>
					</Animation>
				</Style.Animations>
				<Setter Property="Child" Value="{StaticResource down}"/>
			</Style>
		</Styles>
	</UserControl.Styles>	               
	<Design.DataContext>
		<vm:MarketWatchViewModel/>
	</Design.DataContext>
	<Border>
		<Grid RowDefinitions="auto,*">
			<WrapPanel Orientation="Horizontal">
			
				<AutoCompleteBox MinWidth="140"
								 Watermark="Search a symbol ..."
								 VerticalAlignment="Center"
								 Classes="Small Bordered ClearButton" 
								 ValueMemberBinding="{ReflectionBinding FullName}"
								 Name="searchBox">
					<AutoCompleteBox.ItemTemplate>
						<DataTemplate DataType="models:Symbol">
							<TextBlock Text="{Binding FullName}"/>
						</DataTemplate>
					</AutoCompleteBox.ItemTemplate>
				</AutoCompleteBox>
			<Separator Height="25"
					   Margin="10,0,5,0"
					   VerticalAlignment="Center"
					   Width="1"/> 
				<Button Margin="3"
						ToolTip.Tip="Symbol lists"
						Classes="Small"
						HorizontalAlignment="Left">
					<material:MaterialIcon Kind="ListBox"/>
					<Button.Flyout >
						<Flyout Placement="BottomEdgeAlignedLeft">
							<Grid RowDefinitions="auto,auto, *"
								  Height="250">
								<StackPanel Orientation="Horizontal">
									<Border HorizontalAlignment="Left"
											Theme="{StaticResource RadioButtonGroupBorder}">
										<StackPanel Orientation="Horizontal">
											<RadioButton Theme="{DynamicResource ButtonRadioButton}"
														 IsChecked="true"
														 Classes="Small"
														 Name="spotChecker">
												All
											</RadioButton>
											<RadioButton Classes="Small"
												Theme="{DynamicResource ButtonRadioButton}">
												<StackPanel Orientation="Horizontal">
													<material:MaterialIcon Kind="Star"
																		   Foreground="Orange"
																		   Margin="3"/>
													<TextBlock Text="Favorites"
															   VerticalAlignment="Center"/>
												</StackPanel>
											</RadioButton>
											<RadioButton Classes="Small"
												Theme="{DynamicResource ButtonRadioButton}">
												<StackPanel Orientation="Horizontal">
													<material:MaterialIcon Kind="Bitcoin"
																		   Foreground="Orange"
																		   Margin="3"/>
													<TextBlock Text="BTC"
															   VerticalAlignment="Center"/>
												</StackPanel>
											</RadioButton>
											<RadioButton Classes="Small"
												Theme="{DynamicResource ButtonRadioButton}">
												<StackPanel Orientation="Horizontal">
													<material:MaterialIcon Kind="Ethereum"
																		   Foreground="Orange"
																		   Margin="3"/>
													<TextBlock Text="Ethereum"
															   VerticalAlignment="Center"/>
												</StackPanel>
											</RadioButton>
										</StackPanel>
									</Border>
									<Button ToolTip.Tip="Create a new list"
											Classes="Small"
											Margin="3,0">
										<material:MaterialIcon Kind="Plus"/>
									</Button>
									<Button ToolTip.Tip="Delete selection">
										<material:MaterialIcon Kind="Trash"
															   Foreground="OrangeRed"/>
									</Button>
								</StackPanel>
								<TextBox Watermark="Search ..."
										 Name="searchSymbol"
										 Classes="Small Bordered"
										 Margin="3"
										 Grid.Row="1"/>
								<Panel Grid.Row="2">
									<DataGrid Name="allSymbolsGrid"
											  SelectionMode="Single"
											  IsReadOnly="True"
											  SelectedItem="{Binding SelectedSymbol, Mode=TwoWay}"
											  AutoGenerateColumns="True">
										<DataGrid.Columns>
											<DataGridTemplateColumn DisplayIndex="2">
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<Button ToolTip.Tip="Add to the current list"
																Margin="2">
															<material:MaterialIcon Kind="PlusCircle"/>
														</Button>
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
											</DataGridTemplateColumn>
										</DataGrid.Columns>
									</DataGrid>
								</Panel>
							</Grid>
						</Flyout>
					</Button.Flyout>
				</Button>
				<Border Theme="{StaticResource RadioButtonGroupBorder}"
						VerticalAlignment="Center"
						Margin="5">
					<StackPanel Orientation="Horizontal">						
						<RadioButton Classes="Small"
									 ToolTip.Tip="Advanced rates"
									 Name="advancedSelector"
									 Theme="{DynamicResource ButtonRadioButton}">
							<Path Data="M381.464,0.72999448 L687.53601,0.72999448 C704.54001,0.72999579 704.54001,0.72999579 704.54001,17.733997 L704.54001,153.76601 C704.54001,170.77 704.54001,170.77 687.53601,170.77 L455.148,170.77 C438.144,170.77 438.144,170.77 438.144,153.76601 L438.144,131.09399 C438.144,114.09 438.144,114.09 421.13999,114.08999 L381.464,114.08999 C364.45999,114.09 364.45999,114.09 364.45999,97.085999 L364.45999,17.733997 C364.45999,0.72999579 364.45999,0.72999579 381.464,0.72999448 z M17.549988,0.5 L324.45,0.5 C341.49999,0.4999958 341.49999,0.4999958 341.49999,17.549995 L341.49999,97.116669 C341.49999,114.16666 341.49999,114.16666 324.45,114.16666 L284.66666,114.16666 C267.61666,114.16666 267.61666,114.16666 267.61666,131.21666 L267.61666,153.95 C267.61666,171 267.61666,171 250.56666,171 L17.549988,171 C0.5,171 0.5,171 0.5,153.95 L0.5,17.549995 C0.5,0.4999958 0.5,0.4999958 17.549988,0.5 z"
							      Stroke="{Binding ElementName=advancedSelector, Path=Foreground}"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  Width="20"								 
								  Stretch="Uniform"
								  StrokeThickness="1"/>
						</RadioButton>
						<RadioButton Classes="Small"
									 Name="listSelector"
									 IsChecked="true"
									 ToolTip.Tip="Simple rates"
									 Theme="{DynamicResource ButtonRadioButton}">
							<material:MaterialIcon Kind="ListBoxOutline"/>
						</RadioButton>
					</StackPanel>
				</Border>
			</WrapPanel>
			<DataGrid AutoGenerateColumns="False"
					  Name="ratesGrid"
					  Grid.Row="1"
					  RowHeight="22"
					  GridLinesVisibility="All"
					  SelectionMode="Single"
					  SelectedItem="{Binding SelectedTicker, Mode=TwoWay}"
					  IsVisible="{Binding ElementName=listSelector, Path=IsChecked}"
					  RowDetailsVisibilityMode="Collapsed"
					  ItemsSource="{Binding Tickers}">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Ticker"
										FontWeight="DemiBold"
										FontSize="12"
										Binding="{Binding TickerName }">
					</DataGridTextColumn>
					<DataGridTemplateColumn Header="Bid" >
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border Background="{Binding BidColor, Converter={StaticResource
											tickConverter}}"
										Height="20"
										CornerRadius="3"
										Margin="1">
									<TextBlock Text="{Binding Bid, Converter={StaticResource DecimalToStringConverter}}"
											   FontSize="12"
											   Foreground="{Binding BidColor, Converter={StaticResource ResourceKey=tickForegournConverter}}"
											   Margin="3,0"
											   HorizontalAlignment="Right"
											   VerticalAlignment="Center"/>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn Header="Ask">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border Background="{Binding AskColor, Converter={StaticResource ResourceKey=tickConverter}}"
										Height="20"
										CornerRadius="3"
										Margin="1">
									<TextBlock Text="{Binding Ask, Converter={StaticResource DecimalToStringConverter}}"
											   Foreground="{Binding AskColor, Converter={StaticResource ResourceKey=tickForegournConverter}}"
											   FontSize="12"
											   Margin="3,0"
											   HorizontalAlignment="Right"
											   VerticalAlignment="Center"/>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn Header="Spread">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border Margin="1">
									<TextBlock Text="{Binding Spread}"
											   FontSize="12"
											   Margin="3,0"
											   HorizontalAlignment="Right"
											   VerticalAlignment="Center"/>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn Header="% Change">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border	Margin="1">
									<TextBlock Text="{Binding PercentChange}"
											   FontSize="12"
											   Foreground="{Binding ChangeColor, Converter={StaticResource  ResourceKey=tickConverter}}"
											   Margin="3,0"
											   FontWeight="DemiBold"
											   HorizontalAlignment="Right"
											   VerticalAlignment="Center"/>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn Header="High">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border Margin="1">
									<Grid ColumnDefinitions="auto, *">
										<Border Classes="Up"
												IsVisible="{Binding PercentRange, Converter={StaticResource  ResourceKey=upArrowConverter}}"
												Height="12"
												Margin="3,0"/>
										<TextBlock Text="{Binding High, Converter={StaticResource DecimalToStringConverter}}"
												   FontSize="10"
												   Grid.Column="1"
												   Margin="3,0"
												   HorizontalAlignment="Right"
												   VerticalAlignment="Center"/>
									</Grid>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn Header="Low">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border Margin="1">
									<Grid ColumnDefinitions="auto, *">
										<Border Classes="Down"
												IsVisible="{Binding PercentRange, Converter={StaticResource  ResourceKey=downArrowConverter}}"
												Height="12"
												Margin="3,0"/>
										<TextBlock Text="{Binding Low, Converter={StaticResource DecimalToStringConverter}}"
												   FontSize="10"
												   Grid.Column="1"
												   Margin="3,0"
												   HorizontalAlignment="Right"
												   VerticalAlignment="Center"/>
									</Grid>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

				</DataGrid.Columns>
				<DataGrid.RowDetailsTemplate>
					<DataTemplate>
						<TextBlock Text="kmjk"/>
					</DataTemplate>
				</DataGrid.RowDetailsTemplate>
				<DataGrid.ContextMenu>
					<ContextMenu>
						<MenuItem Header="Open a chart">
							<MenuItem Header="1 minute"
									  Command="{Binding OpenChartCommand}"/>
							<MenuItem Header="5 minutes"
									  Command="{Binding OpenChartCommand}"/>
							<MenuItem Header="15 minutes"
									  Command="{Binding OpenChartCommand}"/>
							<MenuItem Header="30 minutes"
									  Command="{Binding OpenChartCommand}"/>
						</MenuItem>
						<MenuItem Header="Setup an alert"/>
					</ContextMenu>
				</DataGrid.ContextMenu>
			</DataGrid>
			<Panel Grid.Row="1"
				   IsVisible="{Binding ElementName=advancedSelector, Path=IsChecked}">
				<ListBox Items="{Binding Tickers}"
						 SelectionMode="Single"
						 SelectedItem="{Binding SelectedTicker, Mode=TwoWay}">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
					<ListBox.ItemTemplate>
						<DataTemplate>
							<local:AdvancedTicker DataContext="{Binding}"
												  Margin="3"/>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Panel>
		</Grid>
	</Border>
</UserControl>
